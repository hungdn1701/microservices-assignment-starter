# Generated by Django 4.2.7 on 2025-04-12 17:30

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(help_text='ID của bác sĩ trong user-service')),
                ('diagnosis_code', models.CharField(help_text='Mã chẩn đoán (ICD-10)', max_length=20)),
                ('diagnosis_description', models.TextField()),
                ('diagnosis_date', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Diagnosis',
                'verbose_name_plural': 'Diagnoses',
                'ordering': ['-diagnosis_date'],
            },
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('doctor_id', models.IntegerField(blank=True, help_text='ID của bác sĩ phụ trách phiên khám', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Encounter',
                'verbose_name_plural': 'Encounters',
                'ordering': ['-encounter_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(help_text='ID của bệnh nhân trong user-service', unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Medical Record',
                'verbose_name_plural': 'Medical Records',
            },
        ),
        migrations.CreateModel(
            name='VitalSign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vital_type', models.CharField(choices=[('TEMPERATURE', 'Temperature'), ('BLOOD_PRESSURE', 'Blood Pressure'), ('HEART_RATE', 'Heart Rate'), ('RESPIRATORY_RATE', 'Respiratory Rate'), ('OXYGEN_SATURATION', 'Oxygen Saturation'), ('HEIGHT', 'Height'), ('WEIGHT', 'Weight'), ('BMI', 'Body Mass Index'), ('OTHER', 'Other')], max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=20)),
                ('recorded_by', models.IntegerField(blank=True, help_text='ID của nhân viên y tế trong user-service', null=True)),
                ('recorded_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='records.encounter')),
            ],
            options={
                'verbose_name': 'Vital Sign',
                'verbose_name_plural': 'Vital Signs',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_type', models.CharField(choices=[('MEDICATION', 'Medication'), ('SURGERY', 'Surgery'), ('THERAPY', 'Therapy'), ('PROCEDURE', 'Procedure'), ('OTHER', 'Other')], max_length=50)),
                ('treatment_description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='records.diagnosis')),
            ],
            options={
                'verbose_name': 'Treatment',
                'verbose_name_plural': 'Treatments',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=50)),
                ('frequency', models.CharField(choices=[('ONCE', 'Once daily'), ('TWICE', 'Twice daily'), ('THREE', 'Three times daily'), ('FOUR', 'Four times daily'), ('AS_NEEDED', 'As needed'), ('OTHER', 'Other')], max_length=20)),
                ('route', models.CharField(help_text='Đường dùng thuốc (uống, tiêm, v.v.)', max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('prescribed_by', models.IntegerField(help_text='ID của bác sĩ trong user-service')),
                ('reason', models.TextField(help_text='Lý do sử dụng thuốc')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='records.encounter')),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_name', models.CharField(max_length=100)),
                ('diagnosis_date', models.DateField()),
                ('resolution_date', models.DateField(blank=True, null=True)),
                ('is_chronic', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_histories', to='records.medicalrecord')),
            ],
            options={
                'verbose_name': 'Medical History',
                'verbose_name_plural': 'Medical Histories',
                'ordering': ['-diagnosis_date'],
            },
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('test_code', models.CharField(blank=True, max_length=50, null=True)),
                ('ordered_by', models.IntegerField(help_text='ID của bác sĩ trong user-service')),
                ('ordered_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('ORDERED', 'Ordered'), ('COLLECTED', 'Specimen Collected'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ORDERED', max_length=20)),
                ('collection_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_tests', to='records.encounter')),
            ],
            options={
                'verbose_name': 'Lab Test',
                'verbose_name_plural': 'Lab Tests',
                'ordering': ['-ordered_at'],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_value', models.CharField(max_length=100)),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
                ('reference_range', models.CharField(blank=True, max_length=100, null=True)),
                ('is_abnormal', models.BooleanField(default=False)),
                ('performed_by', models.IntegerField(blank=True, help_text='ID của kỹ thuật viên trong user-service', null=True)),
                ('performed_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lab_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='records.labtest')),
            ],
            options={
                'verbose_name': 'Lab Result',
                'verbose_name_plural': 'Lab Results',
                'ordering': ['-performed_at'],
            },
        ),
        migrations.CreateModel(
            name='Immunization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccine_name', models.CharField(max_length=100)),
                ('administration_date', models.DateField()),
                ('dose', models.CharField(help_text='Liều lượng hoặc số thứ tự của mũi tiêm', max_length=20)),
                ('administered_by', models.IntegerField(blank=True, help_text='ID của nhân viên y tế trong user-service', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='immunizations', to='records.encounter')),
            ],
            options={
                'verbose_name': 'Immunization',
                'verbose_name_plural': 'Immunizations',
                'ordering': ['-administration_date'],
            },
        ),
        migrations.AddField(
            model_name='encounter',
            name='medical_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounters', to='records.medicalrecord'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='encounter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='records.encounter'),
        ),
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergy_type', models.CharField(help_text='Loại dị ứng (thuốc, thực phẩm, môi trường, v.v.)', max_length=50)),
                ('allergy_name', models.CharField(max_length=100)),
                ('severity', models.CharField(choices=[('MILD', 'Mild'), ('MODERATE', 'Moderate'), ('SEVERE', 'Severe'), ('LIFE_THREATENING', 'Life-threatening')], max_length=20)),
                ('reaction', models.TextField(help_text='Mô tả phản ứng dị ứng')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergies', to='records.medicalrecord')),
            ],
            options={
                'verbose_name': 'Allergy',
                'verbose_name_plural': 'Allergies',
                'unique_together': {('medical_record', 'allergy_name')},
            },
        ),
    ]
