# Generated by Django 4.2.7 on 2025-04-08 17:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('address_type', models.CharField(choices=[('HOME', 'Home'), ('WORK', 'Work'), ('BILLING', 'Billing'), ('OTHER', 'Other')], default='HOME', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('secondary_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('work_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('preferred_contact_method', models.CharField(choices=[('EMAIL', 'Email'), ('PHONE', 'Phone'), ('SMS', 'SMS')], default='EMAIL', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
            },
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(choices=[('CARDIOLOGY', 'Cardiology'), ('DERMATOLOGY', 'Dermatology'), ('ENDOCRINOLOGY', 'Endocrinology'), ('GASTROENTEROLOGY', 'Gastroenterology'), ('GENERAL_PRACTICE', 'General Practice'), ('HEMATOLOGY', 'Hematology'), ('NEUROLOGY', 'Neurology'), ('OBSTETRICS', 'Obstetrics'), ('ONCOLOGY', 'Oncology'), ('OPHTHALMOLOGY', 'Ophthalmology'), ('ORTHOPEDICS', 'Orthopedics'), ('PEDIATRICS', 'Pediatrics'), ('PSYCHIATRY', 'Psychiatry'), ('RADIOLOGY', 'Radiology'), ('SURGERY', 'Surgery'), ('UROLOGY', 'Urology'), ('OTHER', 'Other')], max_length=100)),
                ('secondary_specialization', models.CharField(blank=True, choices=[('CARDIOLOGY', 'Cardiology'), ('DERMATOLOGY', 'Dermatology'), ('ENDOCRINOLOGY', 'Endocrinology'), ('GASTROENTEROLOGY', 'Gastroenterology'), ('GENERAL_PRACTICE', 'General Practice'), ('HEMATOLOGY', 'Hematology'), ('NEUROLOGY', 'Neurology'), ('OBSTETRICS', 'Obstetrics'), ('ONCOLOGY', 'Oncology'), ('OPHTHALMOLOGY', 'Ophthalmology'), ('ORTHOPEDICS', 'Orthopedics'), ('PEDIATRICS', 'Pediatrics'), ('PSYCHIATRY', 'Psychiatry'), ('RADIOLOGY', 'Radiology'), ('SURGERY', 'Surgery'), ('UROLOGY', 'Urology'), ('OTHER', 'Other')], max_length=100, null=True)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_expiry_date', models.DateField(blank=True, null=True)),
                ('years_of_experience', models.PositiveIntegerField()),
                ('education', models.TextField()),
                ('board_certifications', models.TextField(blank=True, null=True)),
                ('hospital_affiliations', models.TextField(blank=True, null=True)),
                ('research_publications', models.TextField(blank=True, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('availability_status', models.CharField(choices=[('AVAILABLE', 'Available'), ('UNAVAILABLE', 'Unavailable'), ('ON_LEAVE', 'On Leave'), ('EMERGENCY_ONLY', 'Emergency Only')], default='AVAILABLE', max_length=20)),
                ('availability_notes', models.TextField(blank=True, null=True)),
                ('max_patients_per_day', models.PositiveIntegerField(default=20)),
                ('accepts_new_patients', models.BooleanField(default=True)),
                ('languages_spoken', models.CharField(default='English', max_length=200)),
                ('profile_picture', models.CharField(blank=True, help_text='Path to profile picture in storage service', max_length=255, null=True)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor Profile',
                'verbose_name_plural': 'Doctor Profiles',
            },
        ),
        migrations.CreateModel(
            name='InsuranceInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_type', models.CharField(choices=[('HEALTH', 'Health Insurance'), ('DENTAL', 'Dental Insurance'), ('VISION', 'Vision Insurance'), ('LIFE', 'Life Insurance'), ('DISABILITY', 'Disability Insurance'), ('OTHER', 'Other')], default='HEALTH', max_length=20)),
                ('policy_number', models.CharField(max_length=100)),
                ('group_number', models.CharField(blank=True, max_length=100, null=True)),
                ('subscriber_name', models.CharField(max_length=200)),
                ('subscriber_relationship', models.CharField(default='SELF', max_length=50)),
                ('coverage_start_date', models.DateField()),
                ('coverage_end_date', models.DateField(blank=True, null=True)),
                ('coverage_level', models.CharField(choices=[('BASIC', 'Basic'), ('STANDARD', 'Standard'), ('PREMIUM', 'Premium'), ('COMPREHENSIVE', 'Comprehensive'), ('CUSTOM', 'Custom')], default='STANDARD', max_length=20)),
                ('deductible', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('copay', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('coinsurance_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage as decimal (e.g., 0.20 for 20%)', max_digits=5, null=True)),
                ('max_out_of_pocket', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Insurance Information',
                'verbose_name_plural': 'Insurance Information',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.CharField(max_length=255, unique=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_info', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('LIGHT', 'Light'), ('DARK', 'Dark'), ('SYSTEM', 'System Default')], default='SYSTEM', max_length=10)),
                ('language', models.CharField(choices=[('EN', 'English'), ('ES', 'Spanish'), ('FR', 'French'), ('DE', 'German'), ('ZH', 'Chinese'), ('JA', 'Japanese'), ('AR', 'Arabic'), ('RU', 'Russian'), ('PT', 'Portuguese'), ('VI', 'Vietnamese')], default='EN', max_length=2)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('date_format', models.CharField(default='MM/DD/YYYY', max_length=20)),
                ('time_format', models.CharField(default='12h', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=True)),
                ('notification_frequency', models.CharField(choices=[('IMMEDIATELY', 'Immediately'), ('DAILY', 'Daily Digest'), ('WEEKLY', 'Weekly Digest'), ('NONE', 'No Notifications')], default='IMMEDIATELY', max_length=20)),
                ('appointment_reminders', models.BooleanField(default=True)),
                ('medication_reminders', models.BooleanField(default=True)),
                ('newsletter_subscription', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Preference',
                'verbose_name_plural': 'User Preferences',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('PASSWORD_CHANGE', 'Password Change'), ('PROFILE_UPDATE', 'Profile Update'), ('APPOINTMENT_BOOK', 'Appointment Booking'), ('APPOINTMENT_CANCEL', 'Appointment Cancellation'), ('PRESCRIPTION_VIEW', 'Prescription View'), ('MEDICAL_RECORD_VIEW', 'Medical Record View'), ('PAYMENT', 'Payment'), ('OTHER', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_info', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(default='SUCCESS', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PharmacistProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_expiry_date', models.DateField(blank=True, null=True)),
                ('specialization', models.CharField(choices=[('CLINICAL', 'Clinical Pharmacist'), ('RETAIL', 'Retail Pharmacist'), ('HOSPITAL', 'Hospital Pharmacist'), ('RESEARCH', 'Research Pharmacist'), ('INDUSTRIAL', 'Industrial Pharmacist'), ('CONSULTANT', 'Consultant Pharmacist'), ('ONCOLOGY', 'Oncology Pharmacist'), ('PEDIATRIC', 'Pediatric Pharmacist'), ('GERIATRIC', 'Geriatric Pharmacist'), ('OTHER', 'Other')], default='RETAIL', max_length=50)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('education', models.TextField()),
                ('certifications', models.TextField(blank=True, null=True)),
                ('pharmacy_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_pharmacy_manager', models.BooleanField(default=False)),
                ('languages_spoken', models.CharField(default='English', max_length=200)),
                ('profile_picture', models.CharField(blank=True, help_text='Path to profile picture in storage service', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pharmacy_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pharmacies', to='users.address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pharmacist_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pharmacist Profile',
                'verbose_name_plural': 'Pharmacist Profiles',
            },
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=5, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('medical_conditions', models.TextField(blank=True, null=True)),
                ('current_medications', models.TextField(blank=True, help_text='List of current medications', null=True)),
                ('family_medical_history', models.TextField(blank=True, null=True)),
                ('primary_language', models.CharField(default='English', max_length=50)),
                ('requires_translator', models.BooleanField(default=False)),
                ('marital_status', models.CharField(blank=True, choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced'), ('WIDOWED', 'Widowed'), ('OTHER', 'Other')], max_length=20, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('emergency_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_for_patients', to='users.contactinfo')),
                ('insurance_information', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='covered_patients', to='users.insuranceinformation')),
                ('preferred_pharmacy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preferred_by_patients', to='users.pharmacistprofile')),
                ('primary_care_physician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_patients', to='users.doctorprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient Profile',
                'verbose_name_plural': 'Patient Profiles',
            },
        ),
        migrations.CreateModel(
            name='NurseProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_expiry_date', models.DateField(blank=True, null=True)),
                ('nurse_type', models.CharField(choices=[('RN', 'Registered Nurse'), ('LPN', 'Licensed Practical Nurse'), ('NP', 'Nurse Practitioner'), ('CNA', 'Certified Nursing Assistant'), ('SPECIALIST', 'Specialist Nurse'), ('OTHER', 'Other')], default='RN', max_length=20)),
                ('department', models.CharField(choices=[('EMERGENCY', 'Emergency'), ('ICU', 'Intensive Care Unit'), ('PEDIATRICS', 'Pediatrics'), ('CARDIOLOGY', 'Cardiology'), ('ONCOLOGY', 'Oncology'), ('NEUROLOGY', 'Neurology'), ('ORTHOPEDICS', 'Orthopedics'), ('GENERAL', 'General'), ('SURGERY', 'Surgery'), ('OBSTETRICS', 'Obstetrics'), ('OTHER', 'Other')], max_length=100)),
                ('specialization', models.CharField(blank=True, max_length=100, null=True)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('education', models.TextField(blank=True, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('shift_preference', models.CharField(choices=[('MORNING', 'Morning Shift'), ('AFTERNOON', 'Afternoon Shift'), ('NIGHT', 'Night Shift'), ('ROTATING', 'Rotating Shift')], default='ROTATING', max_length=20)),
                ('languages_spoken', models.CharField(default='English', max_length=200)),
                ('profile_picture', models.CharField(blank=True, help_text='Path to profile picture in storage service', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_nurses', to='users.nurseprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nurse_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nurse Profile',
                'verbose_name_plural': 'Nurse Profiles',
            },
        ),
        migrations.CreateModel(
            name='LabTechnicianProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_expiry_date', models.DateField(blank=True, null=True)),
                ('specialization', models.CharField(choices=[('HEMATOLOGY', 'Hematology'), ('MICROBIOLOGY', 'Microbiology'), ('BIOCHEMISTRY', 'Biochemistry'), ('IMMUNOLOGY', 'Immunology'), ('PATHOLOGY', 'Pathology'), ('TOXICOLOGY', 'Toxicology'), ('GENETICS', 'Genetics'), ('GENERAL', 'General Laboratory'), ('OTHER', 'Other')], default='GENERAL', max_length=50)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('education', models.TextField()),
                ('certifications', models.TextField(blank=True, null=True)),
                ('laboratory_name', models.CharField(max_length=200)),
                ('supervisor', models.CharField(blank=True, max_length=200, null=True)),
                ('equipment_expertise', models.TextField(blank=True, help_text='List of laboratory equipment the technician is proficient with', null=True)),
                ('profile_picture', models.CharField(blank=True, help_text='Path to profile picture in storage service', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('laboratory_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='laboratories', to='users.address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lab_technician_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lab Technician Profile',
                'verbose_name_plural': 'Lab Technician Profiles',
            },
        ),
        migrations.CreateModel(
            name='InsuranceProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('provider_id', models.CharField(max_length=100, unique=True)),
                ('contact_person', models.CharField(max_length=200)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True, null=True)),
                ('established_year', models.PositiveIntegerField(blank=True, null=True)),
                ('service_areas', models.TextField(help_text='Comma-separated list of service areas')),
                ('available_plans', models.TextField(help_text='Description of available insurance plans')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_providers', to='users.address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Insurance Provider Profile',
                'verbose_name_plural': 'Insurance Provider Profiles',
            },
        ),
        migrations.AddField(
            model_name='insuranceinformation',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_plans', to='users.insuranceproviderprofile'),
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_type', models.CharField(choices=[('SYSTEM', 'System Administrator'), ('HOSPITAL', 'Hospital Administrator'), ('DEPARTMENT', 'Department Administrator'), ('CLINIC', 'Clinic Administrator'), ('BILLING', 'Billing Administrator'), ('HR', 'Human Resources Administrator'), ('OTHER', 'Other')], default='HOSPITAL', max_length=20)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(max_length=100)),
                ('employee_id', models.CharField(max_length=50, unique=True)),
                ('access_level', models.PositiveIntegerField(default=1, help_text='1-5, with 5 being highest access')),
                ('responsibilities', models.TextField(blank=True, null=True)),
                ('profile_picture', models.CharField(blank=True, help_text='Path to profile picture in storage service', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_admins', to='users.adminprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administrator Profile',
                'verbose_name_plural': 'Administrator Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('ID_CARD', 'ID Card'), ('PASSPORT', 'Passport'), ('DRIVER_LICENSE', 'Driver License'), ('MEDICAL_LICENSE', 'Medical License'), ('INSURANCE_CARD', 'Insurance Card'), ('CERTIFICATION', 'Certification'), ('OTHER', 'Other')], max_length=50)),
                ('document_number', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('issuing_authority', models.CharField(max_length=200)),
                ('document_file', models.CharField(help_text='Path to document file in storage service', max_length=255)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Document',
                'verbose_name_plural': 'User Documents',
                'unique_together': {('user', 'document_type', 'document_number')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='insuranceinformation',
            unique_together={('provider', 'policy_number')},
        ),
    ]
