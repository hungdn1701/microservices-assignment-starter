# Generated by Django 4.2.7 on 2025-04-09 02:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dispensing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pharmacist_id', models.IntegerField()),
                ('date_dispensed', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Dispensings',
                'ordering': ['-date_dispensed'],
            },
        ),
        migrations.CreateModel(
            name='DispensingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_dispensed', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['dispensing', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=100)),
                ('expiry_date', models.DateField()),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Inventories',
                'ordering': ['expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('dosage_form', models.CharField(choices=[('TABLET', 'Tablet'), ('CAPSULE', 'Capsule'), ('LIQUID', 'Liquid'), ('INJECTION', 'Injection'), ('CREAM', 'Cream'), ('OINTMENT', 'Ointment'), ('DROPS', 'Drops'), ('INHALER', 'Inhaler'), ('PATCH', 'Patch'), ('OTHER', 'Other')], max_length=20)),
                ('strength', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('ANTIBIOTIC', 'Antibiotic'), ('ANALGESIC', 'Analgesic'), ('ANTIVIRAL', 'Antiviral'), ('ANTIHISTAMINE', 'Antihistamine'), ('ANTIDEPRESSANT', 'Antidepressant'), ('ANTIHYPERTENSIVE', 'Antihypertensive'), ('ANTIDIABETIC', 'Antidiabetic'), ('ANTIINFLAMMATORY', 'Anti-inflammatory'), ('VITAMIN', 'Vitamin'), ('SUPPLEMENT', 'Supplement'), ('OTHER', 'Other')], max_length=20)),
                ('requires_prescription', models.BooleanField(default=True)),
                ('side_effects', models.TextField(blank=True, null=True)),
                ('contraindications', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name', 'strength'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('date_prescribed', models.DateField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('DISPENSED', 'Dispensed'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date_prescribed'],
            },
        ),
        migrations.CreateModel(
            name='PrescriptionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('instructions', models.TextField()),
                ('quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prescription_items', to='pharmacy.medication')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pharmacy.prescription')),
            ],
            options={
                'ordering': ['prescription', 'id'],
            },
        ),
        migrations.AddIndex(
            model_name='prescription',
            index=models.Index(fields=['patient_id'], name='pharmacy_pr_patient_193714_idx'),
        ),
        migrations.AddIndex(
            model_name='prescription',
            index=models.Index(fields=['doctor_id'], name='pharmacy_pr_doctor__b18904_idx'),
        ),
        migrations.AddIndex(
            model_name='prescription',
            index=models.Index(fields=['status'], name='pharmacy_pr_status_3f9cad_idx'),
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['name'], name='pharmacy_me_name_46a660_idx'),
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['category'], name='pharmacy_me_categor_26dcb5_idx'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='medication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='pharmacy.medication'),
        ),
        migrations.AddField(
            model_name='dispensingitem',
            name='dispensing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pharmacy.dispensing'),
        ),
        migrations.AddField(
            model_name='dispensingitem',
            name='inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispensing_items', to='pharmacy.inventory'),
        ),
        migrations.AddField(
            model_name='dispensingitem',
            name='prescription_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispensing_items', to='pharmacy.prescriptionitem'),
        ),
        migrations.AddField(
            model_name='dispensing',
            name='prescription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispensings', to='pharmacy.prescription'),
        ),
        migrations.AddIndex(
            model_name='prescriptionitem',
            index=models.Index(fields=['prescription'], name='pharmacy_pr_prescri_387184_idx'),
        ),
        migrations.AddIndex(
            model_name='prescriptionitem',
            index=models.Index(fields=['medication'], name='pharmacy_pr_medicat_dba79c_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['medication'], name='pharmacy_in_medicat_6b28a7_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['expiry_date'], name='pharmacy_in_expiry__c0dde1_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['batch_number'], name='pharmacy_in_batch_n_a17cac_idx'),
        ),
        migrations.AddIndex(
            model_name='dispensingitem',
            index=models.Index(fields=['dispensing'], name='pharmacy_di_dispens_2e5166_idx'),
        ),
        migrations.AddIndex(
            model_name='dispensingitem',
            index=models.Index(fields=['prescription_item'], name='pharmacy_di_prescri_0ee1cc_idx'),
        ),
        migrations.AddIndex(
            model_name='dispensingitem',
            index=models.Index(fields=['inventory'], name='pharmacy_di_invento_73b9bd_idx'),
        ),
        migrations.AddIndex(
            model_name='dispensing',
            index=models.Index(fields=['prescription'], name='pharmacy_di_prescri_83d6d1_idx'),
        ),
        migrations.AddIndex(
            model_name='dispensing',
            index=models.Index(fields=['pharmacist_id'], name='pharmacy_di_pharmac_3a1828_idx'),
        ),
        migrations.AddIndex(
            model_name='dispensing',
            index=models.Index(fields=['status'], name='pharmacy_di_status_cf4539_idx'),
        ),
    ]
